{"version":3,"file":"select-app.js","sourceRoot":"","sources":["../../../../src/cli/services/app/select-app.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAuB,MAAM,iCAAiC,CAAA;AAE/E,OAAO,EAAC,wBAAwB,EAAE,eAAe,EAAC,MAAM,sBAAsB,CAAA;AAC9E,OAAO,EAAC,oBAAoB,EAAC,MAAM,oCAAoC,CAAA;AACvE,OAAO,EAAC,yBAAyB,EAAE,kBAAkB,EAAE,eAAe,EAAC,MAAM,iBAAiB,CAAA;AAC9F,OAAO,EAAC,WAAW,EAAC,MAAM,8BAA8B,CAAA;AACxD,OAAO,EAAC,eAAe,EAAC,MAAM,oCAAoC,CAAA;AAElE,MAAM,CAAC,KAAK,UAAU,SAAS;IAC7B,MAAM,eAAe,GAAG,MAAM,oBAAoB,EAAE,CAAA;IACpD,MAAM,IAAI,GAAG,MAAM,kBAAkB,CAAC,eAAe,CAAC,CAAA;IACtD,MAAM,GAAG,GAAG,MAAM,wBAAwB,CAAC,IAAI,CAAC,CAAA;IAChD,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,eAAe,CAAC,GAAG,CAAC,EAAE,EAAE,eAAe,CAAC,CAAA;IAC7D,MAAM,iBAAiB,GAAG,MAAM,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,eAAe,CAAC,CAAA;IAC9E,MAAM,eAAe,GAAG,MAAM,yBAAyB,CAAC,iBAAiB,EAAE,eAAe,CAAC,KAAK,CAAC,CAAA;IACjG,OAAO,eAAgB,CAAA;AACzB,CAAC;AAED,MAAM,CAAN,IAAY,QAEX;AAFD,WAAY,QAAQ;IAClB,mEAAkB,CAAA;AACpB,CAAC,EAFW,QAAQ,KAAR,QAAQ,QAEnB;AAED,MAAM,OAAO,GAA8B;IACzC,oBAAoB,EAAE,QAAQ,CAAC,kBAAkB;CAClD,CAAA;AAED,MAAM,CAAC,KAAK,UAAU,uBAAuB,CAAC,MAAc,EAAE,KAAa;IACzE,MAAM,kBAAkB,GAAe,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAA;IACpE,MAAM,WAAW,GAAyB,MAAM,eAAe,CAAC,SAAS,EAAE,KAAK,EAAE,EAAC,MAAM,EAAC,CAAC,CAAA;IAC3F,IAAI,WAAW,CAAC,GAAG,EAAE;QACnB,MAAM,EAAC,GAAG,EAAC,GAAG,WAAW,CAAA;QACzB,MAAM,mBAAmB,GAAG,GAAG,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAA;QAC1E,OAAO,kBAAkB,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,mBAAmB,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA;KAChF;SAAM;QACL,WAAW,CAAC,yEAAyE,CAAC,CAAA;QACtF,OAAO,EAAE,CAAA;KACV;AACH,CAAC","sourcesContent":["import {GetConfig, GetConfigQuerySchema} from '../../api/graphql/get_config.js'\nimport {OrganizationApp} from '../../models/organization.js'\nimport {selectOrganizationPrompt, selectAppPrompt} from '../../prompts/dev.js'\nimport {fetchPartnersSession} from '../context/partner-account-info.js'\nimport {fetchAppDetailsFromApiKey, fetchOrganizations, fetchOrgAndApps} from '../dev/fetch.js'\nimport {outputDebug} from '@shopify/cli-kit/node/output'\nimport {partnersRequest} from '@shopify/cli-kit/node/api/partners'\n\nexport async function selectApp(): Promise<OrganizationApp> {\n  const partnersSession = await fetchPartnersSession()\n  const orgs = await fetchOrganizations(partnersSession)\n  const org = await selectOrganizationPrompt(orgs)\n  const {apps} = await fetchOrgAndApps(org.id, partnersSession)\n  const selectedAppApiKey = await selectAppPrompt(apps, org.id, partnersSession)\n  const fullSelectedApp = await fetchAppDetailsFromApiKey(selectedAppApiKey, partnersSession.token)\n  return fullSelectedApp!\n}\n\nexport enum BetaFlag {\n  VersionedAppConfig,\n}\n\nconst FlagMap: {[key: string]: BetaFlag} = {\n  versioned_app_config: BetaFlag.VersionedAppConfig,\n}\n\nexport async function fetchAppRemoteBetaFlags(apiKey: string, token: string) {\n  const defaultActiveBetas: BetaFlag[] = [BetaFlag.VersionedAppConfig]\n  const queryResult: GetConfigQuerySchema = await partnersRequest(GetConfig, token, {apiKey})\n  if (queryResult.app) {\n    const {app} = queryResult\n    const remoteDisabledFlags = app.disabledBetas.map((flag) => FlagMap[flag])\n    return defaultActiveBetas.filter((beta) => !remoteDisabledFlags.includes(beta))\n  } else {\n    outputDebug(\"Couldn't find app for beta flags. Make sure you have a valid client ID.\")\n    return []\n  }\n}\n"]}